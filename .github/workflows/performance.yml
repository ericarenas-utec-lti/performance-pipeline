name: Automated Performance Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  performance:
    name: Performance Tests with JMeter
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create directory structure
      run: |
        mkdir -p test-plans config results
        echo "📁 Project structure created"
        
    - name: Clean results directory
      run: |
        echo "🧹 Cleaning previous results..."
        rm -rf results/*
        ls -la results/ || echo "Results directory is empty"
        
    - name: Setup JMeter test environment
      run: |
        echo "🔧 Setting up test environment..."
        ls -la test-plans/ || echo "No test-plans directory"
        ls -la config/ || echo "No config directory"
        
    - name: Make threshold script executable
      run: chmod +x config/check-thresholds.sh
      
    - name: Run JMeter performance tests with HTML report
      run: |
        echo "🚀 Running JMeter performance tests..."
        
        # Primero ejecutar sin reporte HTML para generar JTL
        docker run --rm \
          -v $PWD/test-plans:/test-plans \
          -v $PWD/results:/results \
          justb4/jmeter:5.5 \
          -n -t /test-plans/api-performance.jmx \
          -l /results/results.jtl \
          -Jthreads=5 \
          -Jrampup=15 \
          -Jduration=30
        
        # Luego generar reporte HTML desde el JTL
        echo "📊 Generating HTML report from results..."
        docker run --rm \
          -v $PWD/results:/results \
          justb4/jmeter:5.5 \
          -g /results/results.jtl \
          -o /results/html-report
          
    - name: Verify results were generated
      run: |
        echo "✅ Checking generated files..."
        ls -la results/
        if [ -f "results/results.jtl" ]; then
          echo "📈 Results file: $(wc -l < results/results.jtl) lines"
        else
          echo "❌ No results file generated"
          exit 1
        fi
        
        if [ -d "results/html-report" ]; then
          echo "🌐 HTML report generated successfully"
          ls -la results/html-report/ | head -10
        else
          echo "⚠️ HTML report not generated"
        fi
        
    - name: Verify performance thresholds
      run: |
        echo "📊 Verifying performance thresholds..."
        docker run --rm \
          -v $PWD/results:/results \
          -v $PWD/config:/config \
          alpine:latest \
          /bin/sh -c "chmod +x /config/check-thresholds.sh && /config/check-thresholds.sh /results/results.jtl"
          
    - name: Upload HTML Report Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: jmeter-html-dashboard
        path: results/html-report/
        retention-days: 30
        overwrite: true
        
    - name: Upload Test Results Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: jmeter-raw-results
        path: results/
        retention-days: 30
        overwrite: true
        
    - name: Display performance summary
      run: |
        echo "📈 PERFORMANCE TEST SUMMARY"
        echo "============================"
        
        if [ -f "results/results.jtl" ]; then
          # Contar requests en formato CSV o XML
          if head -1 results/results.jtl | grep -q "timeStamp"; then
            TOTAL_REQUESTS=$(tail -n +2 results/results.jtl | wc -l)
            ERROR_REQUESTS=$(tail -n +2 results/results.jtl | grep -c ",false,\|,[45][0-9][0-9],")
          else
            TOTAL_REQUESTS=$(grep -c "<httpSample" results/results.jtl 2>/dev/null || echo "0")
            ERROR_REQUESTS=$(grep "<httpSample" results/results.jtl 2>/dev/null | grep -c 's="false"' 2>/dev/null || echo "0")
          fi
          
          echo "✅ Total Requests: $TOTAL_REQUESTS"
          echo "❌ Error Requests: $ERROR_REQUESTS"
          
          if [ "$TOTAL_REQUESTS" -gt 0 ]; then
            ERROR_RATE=$((ERROR_REQUESTS * 100 / TOTAL_REQUESTS))
            echo "📊 Error Rate: ${ERROR_RATE}%"
          fi
        else
          echo "❌ No results file generated"
        fi
        
        if [ -d "results/html-report" ]; then
          echo "🌐 HTML Dashboard: Generated and available as artifact"
        else
          echo "⚠️ HTML Dashboard: Not generated"
        fi
        
        echo ""
        echo "📦 Artifacts Available:"
        echo "   - jmeter-html-dashboard: Interactive performance dashboard"
        echo "   - jmeter-raw-results: Raw test results and logs"